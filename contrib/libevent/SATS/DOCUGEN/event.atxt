(* ****** ****** *)

%{
implement srcfilename_get () = "../event.sats"
%}

(* ****** ****** *)

%{
val () = patscode_count_reset()
val () = patscode_prefix_set("TRYIT/contrib_libevent_event")
%}

(* ****** ****** *)

#decltitle("\
ATSLIB/contrib/libevent/event\
")

(* ****** ****** *)

#declpreamble('\

#para('\

This package contains an API in ATS for the <a href="http://libevent.org/">libevent</a> package.\

')

')#comment("declpreamble")

(* ****** ****** *)

#declnamesynop("eventp")
#declnamesynop("eventp0")
#declnamesynop("eventp1")

(* ****** ****** *)

#declnamesynop("eventp_is_gtez")

#declnamesynop("eventp2ptr")

#declnamesynop("eventp_null")
#declnamesynop("eventp_free_null")

#declnamesynop("eventp_is_null")
#declnamesynop("eventp_isnot_null")

(* ****** ****** *)

#declnamesynop("eventp_base")
#declnamesynop("eventp0_base")
#declnamesynop("eventp1_base")

(* ****** ****** *)

#declnamesynop("eventp_base_is_gtez")

#declnamesynop("eventp2ptr_base")

#declnamesynop("eventp_base_null")
#declnamesynop("eventp_base_free_null")

#declnamesynop("eventp_base_is_null")
#declnamesynop("eventp_base_isnot_null")

(* ****** ****** *)

#declnamesynop("eventp_config")
#declnamesynop("eventp0_config")
#declnamesynop("eventp1_config")

(* ****** ****** *)

#declnamesynop("eventp_config_is_gtez")

#declnamesynop("eventp2ptr_config")

#declnamesynop("eventp_config_null")
#declnamesynop("eventp_config_free_null")

#declnamesynop("eventp_config_is_null")
#declnamesynop("eventp_config_isnot_null")

(* ****** ****** *)

#declnamesynop("eventp_config_new")
#declnamesynop("eventp_config_free")
#declnamesynop("eventp_config_avoid_method")

(* ****** ****** *)

(* end of [event.atxt] *)
